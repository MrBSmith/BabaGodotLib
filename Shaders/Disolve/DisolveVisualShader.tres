[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://BabaGodotLib/Shaders/Disolve/DisolveNoiseTexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, 0.5, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=2]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.5, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=6]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.615234, 0, 0.540733, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.5, 1, 2.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=9]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=11]
uniform_name = "amount"

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 2.0, 1, 2.0 ]
operator = 3

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_5;
uniform float amount;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out2p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarUniform:6
	float n_out6p0 = amount;

// ScalarOp:18
	float n_in18p0 = 0.50000;
	float n_out18p0 = n_in18p0 - n_out6p0;

// ScalarOp:11
	float n_out11p0 = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333)) - n_out18p0;

// ScalarFunc:12
	float n_out12p0 = round(n_out11p0);

// ScalarOp:13
	float n_in13p1 = 0.05000;
	float n_out13p0 = n_out11p0 - n_in13p1;

// ScalarOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 - n_out13p0;

// ScalarFunc:15
	float n_out15p0 = round(n_out14p0);

// Color:17
	vec3 n_out17p0 = vec3(0.615234, 0.000000, 0.540733);
	float n_out17p1 = 1.000000;

// VectorOp:16
	vec3 n_out16p0 = vec3(n_out15p0) * n_out17p0;

// Output:0
	ALPHA = n_out12p0;
	EMISSION = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -985.266, -95.5 )
nodes/fragment/0/position = Vector2( 1540, 160 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( 80, 160 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( 280, 120 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( 60, 400 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( -680, 260 )
nodes/fragment/8/node = SubResource( 13 )
nodes/fragment/8/position = Vector2( -480, 260 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( -240, 260 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 480, 280 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 680, 160 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 680, 380 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 860, 380 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( 1040, 420 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 1260, 420 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 1100, 640 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 260, 380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 11, 0, 11, 0, 12, 0, 12, 0, 0, 1, 11, 0, 13, 0, 13, 0, 14, 1, 14, 0, 15, 0, 15, 0, 16, 0, 17, 0, 16, 1, 16, 0, 0, 5, 6, 0, 18, 1, 18, 0, 11, 1 )
